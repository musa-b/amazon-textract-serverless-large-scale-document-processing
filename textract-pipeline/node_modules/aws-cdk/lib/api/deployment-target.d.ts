import cxapi = require('@aws-cdk/cx-api');
import { DeployStackResult } from './deploy-stack';
import { SDK } from './util/sdk';
export declare const DEFAULT_TOOLKIT_STACK_NAME = "CDKToolkit";
export declare type Template = {
    [key: string]: any;
};
/**
 * Interface for provisioners
 *
 * Provisioners apply templates to the cloud infrastructure.
 */
export interface IDeploymentTarget {
    readCurrentTemplate(stack: cxapi.SynthesizedStack): Promise<Template>;
    deployStack(options: DeployStackOptions): Promise<DeployStackResult>;
}
export interface DeployStackOptions {
    stack: cxapi.SynthesizedStack;
    roleArn?: string;
    deployName?: string;
    quiet?: boolean;
    ci?: boolean;
    toolkitStackName?: string;
    reuseAssets?: string[];
}
export interface ProvisionerProps {
    aws: SDK;
}
/**
 * Default provisioner (applies to CloudFormation).
 */
export declare class CloudFormationDeploymentTarget implements IDeploymentTarget {
    private readonly aws;
    constructor(props: ProvisionerProps);
    readCurrentTemplate(stack: cxapi.SynthesizedStack): Promise<Template>;
    deployStack(options: DeployStackOptions): Promise<DeployStackResult>;
}
