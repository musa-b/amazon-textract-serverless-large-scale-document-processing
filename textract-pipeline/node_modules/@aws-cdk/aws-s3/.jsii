{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-events": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "peer": true,
                  "targets": {
                    "dotnet": {
                      "assemblyOriginatorKeyFile": "../../key.snk",
                      "namespace": "Amazon.CDK.CXAPI",
                      "packageId": "Amazon.CDK.CXAPI",
                      "signAssembly": true
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk-cx-api",
                        "groupId": "software.amazon.awscdk"
                      },
                      "package": "software.amazon.awscdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    },
                    "python": {
                      "distName": "aws-cdk.cx-api",
                      "module": "aws_cdk.cx_api"
                    }
                  },
                  "version": "0.28.0"
                }
              },
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK",
                  "packageId": "Amazon.CDK",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                },
                "python": {
                  "distName": "aws-cdk.cdk",
                  "module": "aws_cdk.cdk"
                }
              },
              "version": "0.28.0"
            },
            "@aws-cdk/region-info": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.RegionInfo",
                  "packageId": "Amazon.CDK.RegionInfo",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-region-info",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.regioninfo"
                },
                "js": {
                  "npm": "@aws-cdk/region-info"
                },
                "python": {
                  "distName": "aws-cdk.region-info",
                  "module": "aws_cdk.region_info"
                }
              },
              "version": "0.28.0"
            }
          },
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.AWS.IAM",
              "packageId": "Amazon.CDK.AWS.IAM",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "iam",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.services.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            },
            "python": {
              "distName": "aws-cdk.aws-iam",
              "module": "aws_cdk.aws_iam"
            }
          },
          "version": "0.28.0"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                },
                "python": {
                  "distName": "aws-cdk.cx-api",
                  "module": "aws_cdk.cx_api"
                }
              },
              "version": "0.28.0"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            },
            "python": {
              "distName": "aws-cdk.cdk",
              "module": "aws_cdk.cdk"
            }
          },
          "version": "0.28.0"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      },
      "version": "0.28.0"
    },
    "@aws-cdk/aws-iam": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                },
                "python": {
                  "distName": "aws-cdk.cx-api",
                  "module": "aws_cdk.cx_api"
                }
              },
              "version": "0.28.0"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            },
            "python": {
              "distName": "aws-cdk.cdk",
              "module": "aws_cdk.cdk"
            }
          },
          "version": "0.28.0"
        },
        "@aws-cdk/region-info": {
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.RegionInfo",
              "packageId": "Amazon.CDK.RegionInfo",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk-region-info",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.regioninfo"
            },
            "js": {
              "npm": "@aws-cdk/region-info"
            },
            "python": {
              "distName": "aws-cdk.region-info",
              "module": "aws_cdk.region_info"
            }
          },
          "version": "0.28.0"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "0.28.0"
    },
    "@aws-cdk/aws-kms": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "peer": true,
                  "targets": {
                    "dotnet": {
                      "assemblyOriginatorKeyFile": "../../key.snk",
                      "namespace": "Amazon.CDK.CXAPI",
                      "packageId": "Amazon.CDK.CXAPI",
                      "signAssembly": true
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk-cx-api",
                        "groupId": "software.amazon.awscdk"
                      },
                      "package": "software.amazon.awscdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    },
                    "python": {
                      "distName": "aws-cdk.cx-api",
                      "module": "aws_cdk.cx_api"
                    }
                  },
                  "version": "0.28.0"
                }
              },
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK",
                  "packageId": "Amazon.CDK",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                },
                "python": {
                  "distName": "aws-cdk.cdk",
                  "module": "aws_cdk.cdk"
                }
              },
              "version": "0.28.0"
            },
            "@aws-cdk/region-info": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.RegionInfo",
                  "packageId": "Amazon.CDK.RegionInfo",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-region-info",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.regioninfo"
                },
                "js": {
                  "npm": "@aws-cdk/region-info"
                },
                "python": {
                  "distName": "aws-cdk.region-info",
                  "module": "aws_cdk.region_info"
                }
              },
              "version": "0.28.0"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.AWS.IAM",
              "packageId": "Amazon.CDK.AWS.IAM",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "iam",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.services.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            },
            "python": {
              "distName": "aws-cdk.aws-iam",
              "module": "aws_cdk.aws_iam"
            }
          },
          "version": "0.28.0"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                },
                "python": {
                  "distName": "aws-cdk.cx-api",
                  "module": "aws_cdk.cx_api"
                }
              },
              "version": "0.28.0"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            },
            "python": {
              "distName": "aws-cdk.cdk",
              "module": "aws_cdk.cdk"
            }
          },
          "version": "0.28.0"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      },
      "version": "0.28.0"
    },
    "@aws-cdk/aws-s3-notifications": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                },
                "python": {
                  "distName": "aws-cdk.cx-api",
                  "module": "aws_cdk.cx_api"
                }
              },
              "version": "0.28.0"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            },
            "python": {
              "distName": "aws-cdk.cdk",
              "module": "aws_cdk.cdk"
            }
          },
          "version": "0.28.0"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.S3.Notifications",
          "packageId": "Amazon.CDK.AWS.S3.Notifications",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3-notifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.notifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-notifications"
        },
        "python": {
          "distName": "aws-cdk.aws-s3-notifications",
          "module": "aws_cdk.aws_s3_notifications"
        }
      },
      "version": "0.28.0"
    },
    "@aws-cdk/cdk": {
      "dependencies": {
        "@aws-cdk/cx-api": {
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.CXAPI",
              "packageId": "Amazon.CDK.CXAPI",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk-cx-api",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            },
            "python": {
              "distName": "aws-cdk.cx-api",
              "module": "aws_cdk.cx_api"
            }
          },
          "version": "0.28.0"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        },
        "python": {
          "distName": "aws-cdk.cdk",
          "module": "aws_cdk.cdk"
        }
      },
      "version": "0.28.0"
    }
  },
  "description": "CDK Constructs for AWS S3",
  "homepage": "https://github.com/awslabs/aws-cdk",
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-s3",
  "readme": {
    "markdown": "## AWS S3 Construct Library\n\nDefine an unencrypted S3 bucket.\n\n```ts\nnew Bucket(this, 'MyFirstBucket');\n```\n\n`Bucket` constructs expose the following deploy-time attributes:\n\n * `bucketArn` - the ARN of the bucket (i.e. `arn:aws:s3:::bucket_name`)\n * `bucketName` - the name of the bucket (i.e. `bucket_name`)\n * `bucketUrl` - the URL of the bucket (i.e.\n   `https://s3.us-west-1.amazonaws.com/onlybucket`)\n * `arnForObjects(...pattern)` - the ARN of an object or objects within the\n   bucket (i.e.\n   `arn:aws:s3:::my_corporate_bucket/exampleobject.png` or\n   `arn:aws:s3:::my_corporate_bucket/Development/*`)\n * `urlForObject(key)` - the URL of an object within the bucket (i.e.\n   `https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey`)\n\n### Encryption\n\nDefine a KMS-encrypted bucket:\n\n```ts\nconst bucket = new Bucket(this, 'MyUnencryptedBucket', {\n    encryption: BucketEncryption.Kms\n});\n\n// you can access the encryption key:\nassert(bucket.encryptionKey instanceof kms.EncryptionKey);\n```\n\nYou can also supply your own key:\n\n```ts\nconst myKmsKey = new kms.EncryptionKey(this, 'MyKey');\n\nconst bucket = new Bucket(this, 'MyEncryptedBucket', {\n    encryption: BucketEncryption.Kms,\n    encryptionKey: myKmsKey\n});\n\nassert(bucket.encryptionKey === myKmsKey);\n```\n\nUse `BucketEncryption.ManagedKms` to use the S3 master KMS key:\n\n```ts\nconst bucket = new Bucket(this, 'Buck', {\n    encryption: BucketEncryption.ManagedKms\n});\n\nassert(bucket.encryptionKey == null);\n```\n\n### Permissions\n\nA bucket policy will be automatically created for the bucket upon the first call to\n`addToResourcePolicy(statement)`:\n\n```ts\nconst bucket = new Bucket(this, 'MyBucket');\nbucket.addToResourcePolicy(new iam.PolicyStatement()\n  .addActions('s3:GetObject')\n  .addResources(bucket.arnForObjects('file.txt'))\n  .addAccountRootPrincipal());\n```\n\nMost of the time, you won't have to manipulate the bucket policy directly.\nInstead, buckets have \"grant\" methods called to give prepackaged sets of permissions\nto other resources. For example:\n\n```ts\nconst lambda = new lambda.Function(this, 'Lambda', { /* ... */ });\n\nconst bucket = new Bucket(this, 'MyBucket');\nbucket.grantReadWrite(lambda.role);\n```\n\nWill give the Lambda's execution role permissions to read and write\nfrom the bucket.\n\n### Sharing buckets between stacks\n\nTo use a bucket in a different stack in the same CDK application, pass the object to the other stack:\n\n```ts\n\n/**\n * Stack that defines the bucket\n */\nclass Producer extends cdk.Stack {\n    public readonly myBucket: s3.Bucket;\n\n    constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n        super(scope, id, props);\n\n        const bucket = new s3.Bucket(this, 'MyBucket', {\n          removalPolicy: cdk.RemovalPolicy.Destroy\n        });\n        this.myBucket = bucket;\n    }\n}\n\ninterface ConsumerProps extends cdk.StackProps {\n    userBucket: s3.IBucket;\n}\n\n/**\n * Stack that consumes the bucket\n */\nclass Consumer extends cdk.Stack {\n    constructor(scope: cdk.App, id: string, props: ConsumerProps) {\n        super(scope, id, props);\n\n        const user = new iam.User(this, 'MyUser');\n        props.userBucket.grantReadWrite(user);\n    }\n}\n\nconst producer = new Producer(app, 'ProducerStack');\nnew Consumer(app, 'ConsumerStack', { userBucket: producer.myBucket });\n```\n\n### Importing existing buckets\n\nTo import an existing bucket into your CDK application, use the `Bucket.import` factory method.  This method accepts a\n`BucketImportProps` which describes the properties of the already existing bucket:\n\n```ts\nconst bucket = Bucket.import(this, {\n    bucketArn: 'arn:aws:s3:::my-bucket'\n});\n\n// now you can just call methods on the bucket\nbucket.grantReadWrite(user);\n```\n\n### Bucket Notifications\n\nThe Amazon S3 notification feature enables you to receive notifications when\ncertain events happen in your bucket as described under [S3 Bucket\nNotifications] of the S3 Developer Guide.\n\nTo subscribe for bucket notifications, use the `bucket.onEvent` method. The\n`bucket.onObjectCreated` and `bucket.onObjectRemoved` can also be used for these\ncommon use cases.\n\nThe following example will subscribe an SNS topic to be notified of all\n``s3:ObjectCreated:*` events:\n\n```ts\nconst myTopic = new sns.Topic(this, 'MyTopic');\nbucket.onEvent(s3.EventType.ObjectCreated, myTopic);\n```\n\nThis call will also ensure that the topic policy can accept notifications for\nthis specific bucket.\n\nThe following destinations are currently supported:\n\n * `sns.Topic`\n * `sqs.Queue`\n * `lambda.Function`\n\nIt is also possible to specify S3 object key filters when subscribing. The\nfollowing example will notify `myQueue` when objects prefixed with `foo/` and\nhave the `.jpg` suffix are removed from the bucket.\n\n```ts\nbucket.onEvent(s3.EventType.ObjectRemoved, myQueue, { prefix: 'foo/', suffix: '.jpg' });\n```\n\n[S3 Bucket Notifications]: https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\n\n\n### Block Public Access\n\nUse `blockPublicAccess` to specify [block public access settings] on the bucket.\n\nEnable all block public access settings:\n```ts\nconst bucket = new Bucket(this, 'MyBlockedBucket', {\n    blockPublicAccess: BlockPublicAccess.BlockAll\n});\n```\n\nBlock and ignore public ACLs:\n```ts\nconst bucket = new Bucket(this, 'MyBlockedBucket', {\n    blockPublicAccess: BlockPublicAccess.BlockAcls\n});\n```\n\nAlternatively, specify the settings manually:\n```ts\nconst bucket = new Bucket(this, 'MyBlockedBucket', {\n    blockPublicAccess: new BlockPublicAccess({ blockPublicPolicy: true })\n});\n```\n\nWhen `blockPublicPolicy` is set to `true`, `grantPublicRead()` throws an error.\n\n[block public access settings]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/awslabs/aws-cdk.git"
  },
  "schema": "jsii/1.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "namespace": "Amazon.CDK.AWS.S3",
      "packageId": "Amazon.CDK.AWS.S3",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "s3",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.s3"
    },
    "js": {
      "npm": "@aws-cdk/aws-s3"
    },
    "python": {
      "distName": "aws-cdk.aws-s3",
      "module": "aws_cdk.aws_s3"
    }
  },
  "types": {
    "@aws-cdk/aws-s3.BlockPublicAccess": {
      "assembly": "@aws-cdk/aws-s3",
      "fqn": "@aws-cdk/aws-s3.BlockPublicAccess",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-s3.BlockPublicAccessOptions"
            }
          }
        ]
      },
      "kind": "class",
      "name": "BlockPublicAccess",
      "properties": [
        {
          "const": true,
          "immutable": true,
          "name": "BlockAcls",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BlockPublicAccess"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "BlockAll",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BlockPublicAccess"
          }
        },
        {
          "name": "blockPublicAcls",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "name": "blockPublicPolicy",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "name": "ignorePublicAcls",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "name": "restrictPublicBuckets",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BlockPublicAccessOptions": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "fqn": "@aws-cdk/aws-s3.BlockPublicAccessOptions",
      "kind": "interface",
      "name": "BlockPublicAccessOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "Whether to block public ACLs",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options"
          },
          "immutable": true,
          "name": "blockPublicAcls",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether to block public policy",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options"
          },
          "immutable": true,
          "name": "blockPublicPolicy",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether to ignore public ACLs",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options"
          },
          "immutable": true,
          "name": "ignorePublicAcls",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether to restrict public access",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options"
          },
          "immutable": true,
          "name": "restrictPublicBuckets",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.Bucket": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/aws-s3.BucketBase"
      },
      "docs": {
        "comment": "An S3 bucket with associated policy objects\n\nThis bucket does not yet have all features that exposed by the underlying\nBucketResource."
      },
      "fqn": "@aws-cdk/aws-s3.Bucket",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.BucketProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates a Bucket construct that represents an external bucket."
          },
          "name": "import",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "The construct's name."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "A `BucketAttributes` object. Can be obtained from a call to\n`bucket.export()` or manually created."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-s3.BucketImportProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Add a lifecycle rule to the bucket"
          },
          "name": "addLifecycleRule",
          "parameters": [
            {
              "docs": {
                "comment": "The rule to add"
              },
              "name": "rule",
              "type": {
                "fqn": "@aws-cdk/aws-s3.LifecycleRule"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "returns": {
            "fqn": "@aws-cdk/aws-s3.BucketImportProps"
          }
        },
        {
          "docs": {
            "comment": "Adds a bucket notification event destination.",
            "example": "bucket.onEvent(EventType.OnObjectCreated, myLambda, 'home/myusername/*')",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html"
          },
          "name": "onEvent",
          "parameters": [
            {
              "docs": {
                "comment": "The event to trigger the notification"
              },
              "name": "event",
              "type": {
                "fqn": "@aws-cdk/aws-s3.EventType"
              }
            },
            {
              "docs": {
                "comment": "The notification destination (Lambda, SNS Topic or SQS Queue)"
              },
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/aws-s3-notifications.IBucketNotificationDestination"
              }
            },
            {
              "docs": {
                "comment": "S3 object key filter rules to determine which objects\ntrigger this event. Each filter must include a `prefix` and/or `suffix`\nthat will be matched against the s3 object key. Refer to the S3 Developer Guide\nfor details about allowed filter rules."
              },
              "name": "filters",
              "type": {
                "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "comment": "Subscribes a destination to receive notificatins when an object is\ncreated in the bucket. This is identical to calling\n`onEvent(EventType.ObjectCreated)`."
          },
          "name": "onObjectCreated",
          "parameters": [
            {
              "docs": {
                "comment": "The notification destination (see onEvent)"
              },
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/aws-s3-notifications.IBucketNotificationDestination"
              }
            },
            {
              "docs": {
                "comment": "Filters (see onEvent)"
              },
              "name": "filters",
              "type": {
                "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "comment": "Subscribes a destination to receive notificatins when an object is\nremoved from the bucket. This is identical to calling\n`onEvent(EventType.ObjectRemoved)`."
          },
          "name": "onObjectRemoved",
          "parameters": [
            {
              "docs": {
                "comment": "The notification destination (see onEvent)"
              },
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/aws-s3-notifications.IBucketNotificationDestination"
              }
            },
            {
              "docs": {
                "comment": "Filters (see onEvent)"
              },
              "name": "filters",
              "type": {
                "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "Bucket",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "immutable": true,
          "name": "bucketArn",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The name of the bucket."
          },
          "immutable": true,
          "name": "bucketName",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "bucketWebsiteUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The domain of the bucket."
          },
          "immutable": true,
          "name": "domainName",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "dualstackDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "immutable": true,
          "name": "encryptionKey",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "type": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Whether to disallow public access"
          },
          "name": "disallowPublicAccess",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "protected": true,
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Represents an S3 Bucket.\n\nBuckets can be either defined within this stack:\n\n   new Bucket(this, 'MyBucket', { props });\n\nOr imported from an existing bucket:\n\n   Bucket.import(this, 'MyImportedBucket', { bucketArn: ... });\n\nYou can also export a bucket and import it into another stack:\n\n   const ref = myBucket.export();\n   Bucket.import(this, 'MyImportedBucket', ref);"
      },
      "fqn": "@aws-cdk/aws-s3.BucketBase",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The scope in which to define this construct"
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "The scoped construct ID. Must be unique amongst siblings. If\nthe ID includes a path separator (`/`), then it will be replaced by double\ndash `--`."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-s3.IBucket"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Adds a statement to the resource policy for a principal (i.e.\naccount/role/service) to perform actions on this bucket and/or it's\ncontents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for\nthis bucket or objects."
          },
          "name": "addToResourcePolicy",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Returns an ARN that represents all objects within the bucket that match\nthe key pattern specified. To represent all keys, specify ``\"*\"``.\n\nIf you specify multiple components for keyPattern, they will be concatenated::\n\n   arnForObjects('home/', team, '/', user, '/*')"
          },
          "name": "arnForObjects",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "primitive": "string"
          },
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "returns": {
            "fqn": "@aws-cdk/aws-s3.BucketImportProps"
          }
        },
        {
          "docs": {
            "comment": "Grants s3:DeleteObject* permission to an IAM pricipal for objects\nin this bucket."
          },
          "name": "grantDelete",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "docs": {
            "comment": "Allows unrestricted access to objects from this bucket.\n\nIMPORTANT: This permission allows anyone to perform actions on S3 objects\nin this bucket, which is useful for when you configure your bucket as a\nwebsite and want everyone to be able to read objects in the bucket without\nneeding to authenticate.\n\nWithout arguments, this method will grant read (\"s3:GetObject\") access to\nall objects (\"*\") in the bucket.\n\nThe method returns the `iam.PolicyStatement` object, which can then be modified\nas needed. For example, you can add a condition that will restrict access only\nto an IPv4 range like this:\n\n     const statement = bucket.grantPublicAccess();\n     statement.addCondition('IpAddress', { \"aws:SourceIp\": \"54.240.143.0/24\" });"
          },
          "name": "grantPublicAccess",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "the prefix of S3 object keys (e.g. `home/*`). Default is \"*\"."
              },
              "name": "keyPrefix",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the set of S3 actions to allow. Default is \"s3:GetObject\"."
              },
              "name": "allowedActions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          },
          "variadic": true
        },
        {
          "docs": {
            "comment": "Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal.\n\nIf encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal."
          },
          "name": "grantPut",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "docs": {
            "comment": "Grant read permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf encryption is used, permission to use the key to decrypt the contents\nof the bucket will also be granted to the same principal."
          },
          "name": "grantRead",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "docs": {
            "comment": "Grants read/write permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "docs": {
            "comment": "Grant write permissions to this bucket to an IAM principal.\n\nIf encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal."
          },
          "name": "grantWrite",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "docs": {
            "comment": "Defines a CloudWatch Event Rule that triggers upon putting an object into the Bucket."
          },
          "name": "onPutObject",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-events.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "path",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-events.EventRule"
          }
        },
        {
          "docs": {
            "comment": "The https URL of an S3 object. For example:",
            "example": "https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey",
            "return": "an ObjectS3Url token"
          },
          "name": "urlForObject",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The S3 key of the object. If not specified, the URL of the\nbucket is returned."
              },
              "name": "key",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "name": "BucketBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "immutable": true,
          "name": "bucketArn",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the bucket."
          },
          "immutable": true,
          "name": "bucketName",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The https:// URL of this bucket.",
            "example": "https://s3.us-west-1.amazonaws.com/onlybucket\nSimilar to calling `urlForObject` with no object key."
          },
          "immutable": true,
          "name": "bucketUrl",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The domain of the bucket."
          },
          "immutable": true,
          "name": "domainName",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "immutable": true,
          "name": "encryptionKey",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether to disallow public access"
          },
          "name": "disallowPublicAccess",
          "protected": true,
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketEncryption": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "comment": "What kind of server-side encryption to apply to this bucket"
      },
      "fqn": "@aws-cdk/aws-s3.BucketEncryption",
      "kind": "enum",
      "members": [
        {
          "docs": {
            "comment": "Objects in the bucket are not encrypted."
          },
          "name": "Unencrypted"
        },
        {
          "docs": {
            "comment": "Server-side KMS encryption with a master key managed by KMS."
          },
          "name": "KmsManaged"
        },
        {
          "docs": {
            "comment": "Server-side encryption with a master key managed by S3."
          },
          "name": "S3Managed"
        },
        {
          "docs": {
            "comment": "Server-side encryption with a KMS key managed by the user.\nIf `encryptionKey` is specified, this key will be used, otherwise, one will be defined."
          },
          "name": "Kms"
        }
      ],
      "name": "BucketEncryption"
    },
    "@aws-cdk/aws-s3.BucketImportProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "A reference to a bucket. The easiest way to instantiate is to call\n`bucket.export()`. Then, the consumer can use `Bucket.import(this, ref)` and\nget a `Bucket`."
      },
      "fqn": "@aws-cdk/aws-s3.BucketImportProps",
      "kind": "interface",
      "name": "BucketImportProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the bucket. At least one of bucketArn or bucketName must be\ndefined in order to initialize a bucket ref."
          },
          "immutable": true,
          "name": "bucketArn",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The domain name of the bucket.",
            "default": "Inferred from bucket name"
          },
          "immutable": true,
          "name": "bucketDomainName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the bucket. If the underlying value of ARN is a string, the\nname will be parsed from the ARN. Otherwise, the name is optional, but\nsome features that require the bucket name such as auto-creating a bucket\npolicy, won't work."
          },
          "immutable": true,
          "name": "bucketName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The format of the website URL of the bucket. This should be true for\nregions launched since 2014.",
            "default": "false"
          },
          "immutable": true,
          "name": "bucketWebsiteNewUrlFormat",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The website URL of the bucket (if static web hosting is enabled).",
            "default": "Inferred from bucket name"
          },
          "immutable": true,
          "name": "bucketWebsiteUrl",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketPolicy": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Applies an Amazon S3 bucket policy to an Amazon S3 bucket."
      },
      "fqn": "@aws-cdk/aws-s3.BucketPolicy",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.BucketPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "name": "BucketPolicy",
      "properties": [
        {
          "docs": {
            "comment": "A policy document containing permissions to add to the specified bucket.\nFor more information, see Access Policy Language Overview in the Amazon\nSimple Storage Service Developer Guide."
          },
          "immutable": true,
          "name": "document",
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketPolicyProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "fqn": "@aws-cdk/aws-s3.BucketPolicyProps",
      "kind": "interface",
      "name": "BucketPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The Amazon S3 bucket that the policy applies to."
          },
          "immutable": true,
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "fqn": "@aws-cdk/aws-s3.BucketProps",
      "kind": "interface",
      "name": "BucketProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The block public access configuration of this bucket.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"
          },
          "immutable": true,
          "name": "blockPublicAccess",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BlockPublicAccess",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Physical name of this bucket.",
            "default": "Assigned by CloudFormation (recommended)"
          },
          "immutable": true,
          "name": "bucketName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The kind of server-side encryption to apply to this bucket.\n\nIf you choose KMS, you can specify a KMS key via `encryptionKey`. If\nencryption key is not specified, a key will automatically be created.",
            "default": "Unencrypted"
          },
          "immutable": true,
          "name": "encryption",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketEncryption",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "External KMS key to use for bucket encryption.\n\nThe 'encryption' property must be either not specified or set to \"Kms\".\nAn error will be emitted if encryption is set to \"Unencrypted\" or\n\"Managed\".",
            "default": "If encryption is set to \"Kms\" and this property is undefined, a\nnew KMS key will be created and associated with this bucket."
          },
          "immutable": true,
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Rules that define how Amazon S3 manages objects during their lifetime.",
            "default": "No lifecycle rules"
          },
          "immutable": true,
          "name": "lifecycleRules",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.LifecycleRule"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grants public read access to all objects in the bucket.\nSimilar to calling `bucket.grantPublicAccess()`"
          },
          "immutable": true,
          "name": "publicReadAccess",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Policy to apply when the bucket is removed from this stack.",
            "default": "The bucket will be orphaned"
          },
          "immutable": true,
          "name": "removalPolicy",
          "type": {
            "fqn": "@aws-cdk/cdk.RemovalPolicy",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether this bucket should have versioning turned on or not.",
            "default": "false"
          },
          "immutable": true,
          "name": "versioned",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the error document (e.g. \"404.html\") for the website.\n`websiteIndexDocument` must also be set if this is set."
          },
          "immutable": true,
          "name": "websiteErrorDocument",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the index document (e.g. \"index.html\") for the website. Enables static website\nhosting for this bucket."
          },
          "immutable": true,
          "name": "websiteIndexDocument",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.CfnResource"
      },
      "docs": {
        "cloudformationResource": "AWS::S3::Bucket",
        "comment": "A CloudFormation `AWS::S3::Bucket`",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket",
      "initializer": {
        "docs": {
          "comment": "Create a new `AWS::S3::Bucket`."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "- scope in which this resource is defined"
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "- scoped id of the resource"
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "- resource properties"
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.CfnBucketProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "overrides": {
            "fqn": "@aws-cdk/cdk.CfnResource"
          },
          "parameters": [
            {
              "name": "properties",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "CfnBucket",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformationAttribute": "Arn"
          },
          "immutable": true,
          "name": "bucketArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformationAttribute": "DomainName"
          },
          "immutable": true,
          "name": "bucketDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformationAttribute": "DualStackDomainName"
          },
          "immutable": true,
          "name": "bucketDualStackDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "bucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformationAttribute": "RegionalDomainName"
          },
          "immutable": true,
          "name": "bucketRegionalDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformationAttribute": "WebsiteURL"
          },
          "immutable": true,
          "name": "bucketWebsiteUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "propertyOverrides",
          "type": {
            "fqn": "@aws-cdk/aws-s3.CfnBucketProps"
          }
        },
        {
          "docs": {
            "comment": "The `TagManager` handles setting, removing and formatting tags\n\nTags should be managed either passing them as properties during\ninitiation or by calling methods on this object. If both techniques are\nused only the tags from the TagManager will be used. `Tag` (aspect)\nwill use the manager."
          },
          "immutable": true,
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AbortIncompleteMultipartUploadProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-abortincompletemultipartupload.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AbortIncompleteMultipartUploadProperty",
      "kind": "interface",
      "name": "AbortIncompleteMultipartUploadProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.AbortIncompleteMultipartUploadProperty.DaysAfterInitiation`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-abortincompletemultipartupload.html#cfn-s3-bucket-abortincompletemultipartupload-daysafterinitiation"
          },
          "immutable": true,
          "name": "daysAfterInitiation",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty",
      "kind": "interface",
      "name": "AccelerateConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.AccelerateConfigurationProperty.AccelerationStatus`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-accelerationstatus"
          },
          "immutable": true,
          "name": "accelerationStatus",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AccessControlTranslationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accesscontroltranslation.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AccessControlTranslationProperty",
      "kind": "interface",
      "name": "AccessControlTranslationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.AccessControlTranslationProperty.Owner`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accesscontroltranslation.html#cfn-s3-bucket-accesscontroltranslation-owner"
          },
          "immutable": true,
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty",
      "kind": "interface",
      "name": "AnalyticsConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.AnalyticsConfigurationProperty.Id`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-id"
          },
          "immutable": true,
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.AnalyticsConfigurationProperty.StorageClassAnalysis`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-storageclassanalysis"
          },
          "immutable": true,
          "name": "storageClassAnalysis",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.StorageClassAnalysisProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.AnalyticsConfigurationProperty.Prefix`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-prefix"
          },
          "immutable": true,
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.AnalyticsConfigurationProperty.TagFilters`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-tagfilters"
          },
          "immutable": true,
          "name": "tagFilters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty",
      "kind": "interface",
      "name": "BucketEncryptionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.BucketEncryptionProperty.ServerSideEncryptionConfiguration`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-serversideencryptionconfiguration"
          },
          "immutable": true,
          "name": "serverSideEncryptionConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty",
      "kind": "interface",
      "name": "CorsConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.CorsConfigurationProperty.CorsRules`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html#cfn-s3-bucket-cors-corsrule"
          },
          "immutable": true,
          "name": "corsRules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.CorsRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsRuleProperty",
      "kind": "interface",
      "name": "CorsRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.CorsRuleProperty.AllowedMethods`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedmethods"
          },
          "immutable": true,
          "name": "allowedMethods",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.CorsRuleProperty.AllowedOrigins`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedorigins"
          },
          "immutable": true,
          "name": "allowedOrigins",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.CorsRuleProperty.AllowedHeaders`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedheaders"
          },
          "immutable": true,
          "name": "allowedHeaders",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.CorsRuleProperty.ExposedHeaders`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-exposedheaders"
          },
          "immutable": true,
          "name": "exposedHeaders",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.CorsRuleProperty.Id`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-id"
          },
          "immutable": true,
          "name": "id",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.CorsRuleProperty.MaxAge`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-maxage"
          },
          "immutable": true,
          "name": "maxAge",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.DataExportProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.DataExportProperty",
      "kind": "interface",
      "name": "DataExportProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.DataExportProperty.Destination`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html#cfn-s3-bucket-dataexport-destination"
          },
          "immutable": true,
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.DestinationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.DataExportProperty.OutputSchemaVersion`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html#cfn-s3-bucket-dataexport-outputschemaversion"
          },
          "immutable": true,
          "name": "outputSchemaVersion",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.DestinationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.DestinationProperty",
      "kind": "interface",
      "name": "DestinationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.DestinationProperty.BucketArn`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-bucketarn"
          },
          "immutable": true,
          "name": "bucketArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.DestinationProperty.Format`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-format"
          },
          "immutable": true,
          "name": "format",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.DestinationProperty.BucketAccountId`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-bucketaccountid"
          },
          "immutable": true,
          "name": "bucketAccountId",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.DestinationProperty.Prefix`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-prefix"
          },
          "immutable": true,
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.EncryptionConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-encryptionconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.EncryptionConfigurationProperty",
      "kind": "interface",
      "name": "EncryptionConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.EncryptionConfigurationProperty.ReplicaKmsKeyID`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-encryptionconfiguration.html#cfn-s3-bucket-encryptionconfiguration-replicakmskeyid"
          },
          "immutable": true,
          "name": "replicaKmsKeyId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.FilterRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.FilterRuleProperty",
      "kind": "interface",
      "name": "FilterRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.FilterRuleProperty.Name`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules-name"
          },
          "immutable": true,
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.FilterRuleProperty.Value`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules-value"
          },
          "immutable": true,
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty",
      "kind": "interface",
      "name": "InventoryConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.InventoryConfigurationProperty.Destination`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-destination"
          },
          "immutable": true,
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.DestinationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.InventoryConfigurationProperty.Enabled`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-enabled"
          },
          "immutable": true,
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.InventoryConfigurationProperty.Id`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-id"
          },
          "immutable": true,
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.InventoryConfigurationProperty.IncludedObjectVersions`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-includedobjectversions"
          },
          "immutable": true,
          "name": "includedObjectVersions",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.InventoryConfigurationProperty.ScheduleFrequency`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-schedulefrequency"
          },
          "immutable": true,
          "name": "scheduleFrequency",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.InventoryConfigurationProperty.OptionalFields`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-optionalfields"
          },
          "immutable": true,
          "name": "optionalFields",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.InventoryConfigurationProperty.Prefix`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-prefix"
          },
          "immutable": true,
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.LambdaConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.LambdaConfigurationProperty",
      "kind": "interface",
      "name": "LambdaConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.LambdaConfigurationProperty.Event`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-event"
          },
          "immutable": true,
          "name": "event",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.LambdaConfigurationProperty.Function`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-function"
          },
          "immutable": true,
          "name": "function",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.LambdaConfigurationProperty.Filter`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-filter"
          },
          "immutable": true,
          "name": "filter",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty",
      "kind": "interface",
      "name": "LifecycleConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.LifecycleConfigurationProperty.Rules`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html#cfn-s3-bucket-lifecycleconfig-rules"
          },
          "immutable": true,
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.RuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty",
      "kind": "interface",
      "name": "LoggingConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.LoggingConfigurationProperty.DestinationBucketName`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html#cfn-s3-bucket-loggingconfig-destinationbucketname"
          },
          "immutable": true,
          "name": "destinationBucketName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.LoggingConfigurationProperty.LogFilePrefix`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html#cfn-s3-bucket-loggingconfig-logfileprefix"
          },
          "immutable": true,
          "name": "logFilePrefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty",
      "kind": "interface",
      "name": "MetricsConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.MetricsConfigurationProperty.Id`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-id"
          },
          "immutable": true,
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.MetricsConfigurationProperty.Prefix`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-prefix"
          },
          "immutable": true,
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.MetricsConfigurationProperty.TagFilters`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-tagfilters"
          },
          "immutable": true,
          "name": "tagFilters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty",
      "kind": "interface",
      "name": "NoncurrentVersionTransitionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.NoncurrentVersionTransitionProperty.StorageClass`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition-storageclass"
          },
          "immutable": true,
          "name": "storageClass",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.NoncurrentVersionTransitionProperty.TransitionInDays`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition-transitionindays"
          },
          "immutable": true,
          "name": "transitionInDays",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty",
      "kind": "interface",
      "name": "NotificationConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.NotificationConfigurationProperty.LambdaConfigurations`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig"
          },
          "immutable": true,
          "name": "lambdaConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.LambdaConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.NotificationConfigurationProperty.QueueConfigurations`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-queueconfig"
          },
          "immutable": true,
          "name": "queueConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.QueueConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.NotificationConfigurationProperty.TopicConfigurations`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-topicconfig"
          },
          "immutable": true,
          "name": "topicConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TopicConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty",
      "kind": "interface",
      "name": "NotificationFilterProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.NotificationFilterProperty.S3Key`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key"
          },
          "immutable": true,
          "name": "s3Key",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.S3KeyFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty",
      "kind": "interface",
      "name": "PublicAccessBlockConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.PublicAccessBlockConfigurationProperty.BlockPublicAcls`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-blockpublicacls"
          },
          "immutable": true,
          "name": "blockPublicAcls",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.PublicAccessBlockConfigurationProperty.BlockPublicPolicy`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-blockpublicpolicy"
          },
          "immutable": true,
          "name": "blockPublicPolicy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.PublicAccessBlockConfigurationProperty.IgnorePublicAcls`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-ignorepublicacls"
          },
          "immutable": true,
          "name": "ignorePublicAcls",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.PublicAccessBlockConfigurationProperty.RestrictPublicBuckets`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-restrictpublicbuckets"
          },
          "immutable": true,
          "name": "restrictPublicBuckets",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.QueueConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.QueueConfigurationProperty",
      "kind": "interface",
      "name": "QueueConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.QueueConfigurationProperty.Event`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-event"
          },
          "immutable": true,
          "name": "event",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.QueueConfigurationProperty.Queue`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-queue"
          },
          "immutable": true,
          "name": "queue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.QueueConfigurationProperty.Filter`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-filter"
          },
          "immutable": true,
          "name": "filter",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RedirectAllRequestsToProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectAllRequestsToProperty",
      "kind": "interface",
      "name": "RedirectAllRequestsToProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RedirectAllRequestsToProperty.HostName`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html#cfn-s3-websiteconfiguration-redirectallrequeststo-hostname"
          },
          "immutable": true,
          "name": "hostName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RedirectAllRequestsToProperty.Protocol`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html#cfn-s3-websiteconfiguration-redirectallrequeststo-protocol"
          },
          "immutable": true,
          "name": "protocol",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RedirectRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectRuleProperty",
      "kind": "interface",
      "name": "RedirectRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RedirectRuleProperty.HostName`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-hostname"
          },
          "immutable": true,
          "name": "hostName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RedirectRuleProperty.HttpRedirectCode`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-httpredirectcode"
          },
          "immutable": true,
          "name": "httpRedirectCode",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RedirectRuleProperty.Protocol`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-protocol"
          },
          "immutable": true,
          "name": "protocol",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RedirectRuleProperty.ReplaceKeyPrefixWith`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-replacekeyprefixwith"
          },
          "immutable": true,
          "name": "replaceKeyPrefixWith",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RedirectRuleProperty.ReplaceKeyWith`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-replacekeywith"
          },
          "immutable": true,
          "name": "replaceKeyWith",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty",
      "kind": "interface",
      "name": "ReplicationConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationConfigurationProperty.Role`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-role"
          },
          "immutable": true,
          "name": "role",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationConfigurationProperty.Rules`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-rules"
          },
          "immutable": true,
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationDestinationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationDestinationProperty",
      "kind": "interface",
      "name": "ReplicationDestinationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationDestinationProperty.Bucket`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationconfiguration-rules-destination-bucket"
          },
          "immutable": true,
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationDestinationProperty.AccessControlTranslation`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-accesscontroltranslation"
          },
          "immutable": true,
          "name": "accessControlTranslation",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.AccessControlTranslationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationDestinationProperty.Account`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-account"
          },
          "immutable": true,
          "name": "account",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationDestinationProperty.EncryptionConfiguration`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-encryptionconfiguration"
          },
          "immutable": true,
          "name": "encryptionConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.EncryptionConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationDestinationProperty.StorageClass`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationconfiguration-rules-destination-storageclass"
          },
          "immutable": true,
          "name": "storageClass",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleProperty",
      "kind": "interface",
      "name": "ReplicationRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationRuleProperty.Destination`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-destination"
          },
          "immutable": true,
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationDestinationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationRuleProperty.Prefix`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-prefix"
          },
          "immutable": true,
          "name": "prefix",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationRuleProperty.Status`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-status"
          },
          "immutable": true,
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationRuleProperty.Id`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-id"
          },
          "immutable": true,
          "name": "id",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ReplicationRuleProperty.SourceSelectionCriteria`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationrule-sourceselectioncriteria"
          },
          "immutable": true,
          "name": "sourceSelectionCriteria",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.SourceSelectionCriteriaProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RoutingRuleConditionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleConditionProperty",
      "kind": "interface",
      "name": "RoutingRuleConditionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RoutingRuleConditionProperty.HttpErrorCodeReturnedEquals`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition-httperrorcodereturnedequals"
          },
          "immutable": true,
          "name": "httpErrorCodeReturnedEquals",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RoutingRuleConditionProperty.KeyPrefixEquals`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition-keyprefixequals"
          },
          "immutable": true,
          "name": "keyPrefixEquals",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RoutingRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleProperty",
      "kind": "interface",
      "name": "RoutingRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RoutingRuleProperty.RedirectRule`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html#cfn-s3-websiteconfiguration-routingrules-redirectrule"
          },
          "immutable": true,
          "name": "redirectRule",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectRuleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RoutingRuleProperty.RoutingRuleCondition`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition"
          },
          "immutable": true,
          "name": "routingRuleCondition",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleConditionProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RuleProperty",
      "kind": "interface",
      "name": "RuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.Status`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-status"
          },
          "immutable": true,
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.AbortIncompleteMultipartUpload`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-abortincompletemultipartupload"
          },
          "immutable": true,
          "name": "abortIncompleteMultipartUpload",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.AbortIncompleteMultipartUploadProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.ExpirationDate`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationdate"
          },
          "immutable": true,
          "name": "expirationDate",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.ExpirationInDays`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationindays"
          },
          "immutable": true,
          "name": "expirationInDays",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.Id`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-id"
          },
          "immutable": true,
          "name": "id",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.NoncurrentVersionExpirationInDays`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversionexpirationindays"
          },
          "immutable": true,
          "name": "noncurrentVersionExpirationInDays",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.NoncurrentVersionTransition`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition"
          },
          "immutable": true,
          "name": "noncurrentVersionTransition",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.NoncurrentVersionTransitions`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransitions"
          },
          "immutable": true,
          "name": "noncurrentVersionTransitions",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.Prefix`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-prefix"
          },
          "immutable": true,
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.TagFilters`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-tagfilters"
          },
          "immutable": true,
          "name": "tagFilters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.Transition`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transition"
          },
          "immutable": true,
          "name": "transition",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.TransitionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.RuleProperty.Transitions`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transitions"
          },
          "immutable": true,
          "name": "transitions",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TransitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.S3KeyFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.S3KeyFilterProperty",
      "kind": "interface",
      "name": "S3KeyFilterProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.S3KeyFilterProperty.Rules`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules"
          },
          "immutable": true,
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.FilterRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionByDefaultProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionByDefaultProperty",
      "kind": "interface",
      "name": "ServerSideEncryptionByDefaultProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ServerSideEncryptionByDefaultProperty.SSEAlgorithm`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html#cfn-s3-bucket-serversideencryptionbydefault-ssealgorithm"
          },
          "immutable": true,
          "name": "sseAlgorithm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ServerSideEncryptionByDefaultProperty.KMSMasterKeyID`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html#cfn-s3-bucket-serversideencryptionbydefault-kmsmasterkeyid"
          },
          "immutable": true,
          "name": "kmsMasterKeyId",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionrule.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionRuleProperty",
      "kind": "interface",
      "name": "ServerSideEncryptionRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.ServerSideEncryptionRuleProperty.ServerSideEncryptionByDefault`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionrule.html#cfn-s3-bucket-serversideencryptionrule-serversideencryptionbydefault"
          },
          "immutable": true,
          "name": "serverSideEncryptionByDefault",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionByDefaultProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.SourceSelectionCriteriaProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-sourceselectioncriteria.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.SourceSelectionCriteriaProperty",
      "kind": "interface",
      "name": "SourceSelectionCriteriaProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.SourceSelectionCriteriaProperty.SseKmsEncryptedObjects`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-sourceselectioncriteria.html#cfn-s3-bucket-sourceselectioncriteria-ssekmsencryptedobjects"
          },
          "immutable": true,
          "name": "sseKmsEncryptedObjects",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.SseKmsEncryptedObjectsProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.SseKmsEncryptedObjectsProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ssekmsencryptedobjects.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.SseKmsEncryptedObjectsProperty",
      "kind": "interface",
      "name": "SseKmsEncryptedObjectsProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.SseKmsEncryptedObjectsProperty.Status`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ssekmsencryptedobjects.html#cfn-s3-bucket-ssekmsencryptedobjects-status"
          },
          "immutable": true,
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.StorageClassAnalysisProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-storageclassanalysis.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.StorageClassAnalysisProperty",
      "kind": "interface",
      "name": "StorageClassAnalysisProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.StorageClassAnalysisProperty.DataExport`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-storageclassanalysis.html#cfn-s3-bucket-storageclassanalysis-dataexport"
          },
          "immutable": true,
          "name": "dataExport",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.DataExportProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty",
      "kind": "interface",
      "name": "TagFilterProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.TagFilterProperty.Key`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html#cfn-s3-bucket-tagfilter-key"
          },
          "immutable": true,
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.TagFilterProperty.Value`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html#cfn-s3-bucket-tagfilter-value"
          },
          "immutable": true,
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.TopicConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.TopicConfigurationProperty",
      "kind": "interface",
      "name": "TopicConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.TopicConfigurationProperty.Event`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-event"
          },
          "immutable": true,
          "name": "event",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.TopicConfigurationProperty.Topic`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-topic"
          },
          "immutable": true,
          "name": "topic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.TopicConfigurationProperty.Filter`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-filter"
          },
          "immutable": true,
          "name": "filter",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.TransitionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.TransitionProperty",
      "kind": "interface",
      "name": "TransitionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.TransitionProperty.StorageClass`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-storageclass"
          },
          "immutable": true,
          "name": "storageClass",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.TransitionProperty.TransitionDate`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-transitiondate"
          },
          "immutable": true,
          "name": "transitionDate",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.TransitionProperty.TransitionInDays`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-transitionindays"
          },
          "immutable": true,
          "name": "transitionInDays",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty",
      "kind": "interface",
      "name": "VersioningConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.VersioningConfigurationProperty.Status`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html#cfn-s3-bucket-versioningconfig-status"
          },
          "immutable": true,
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty",
      "kind": "interface",
      "name": "WebsiteConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.WebsiteConfigurationProperty.ErrorDocument`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-errordocument"
          },
          "immutable": true,
          "name": "errorDocument",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.WebsiteConfigurationProperty.IndexDocument`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-indexdocument"
          },
          "immutable": true,
          "name": "indexDocument",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.WebsiteConfigurationProperty.RedirectAllRequestsTo`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-redirectallrequeststo"
          },
          "immutable": true,
          "name": "redirectAllRequestsTo",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectAllRequestsToProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`CfnBucket.WebsiteConfigurationProperty.RoutingRules`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-routingrules"
          },
          "immutable": true,
          "name": "routingRules",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucketPolicy": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.CfnResource"
      },
      "docs": {
        "cloudformationResource": "AWS::S3::BucketPolicy",
        "comment": "A CloudFormation `AWS::S3::BucketPolicy`",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy",
      "initializer": {
        "docs": {
          "comment": "Create a new `AWS::S3::BucketPolicy`."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "- scope in which this resource is defined"
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "- scoped id of the resource"
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "- resource properties"
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.CfnBucketPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "overrides": {
            "fqn": "@aws-cdk/cdk.CfnResource"
          },
          "parameters": [
            {
              "name": "properties",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "CfnBucketPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "propertyOverrides",
          "type": {
            "fqn": "@aws-cdk/aws-s3.CfnBucketPolicyProps"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucketPolicyProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Properties for defining a `AWS::S3::BucketPolicy`",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucketPolicyProps",
      "kind": "interface",
      "name": "CfnBucketPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::BucketPolicy.Bucket`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html#aws-properties-s3-policy-bucket"
          },
          "immutable": true,
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::BucketPolicy.PolicyDocument`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html#aws-properties-s3-policy-policydocument"
          },
          "immutable": true,
          "name": "policyDocument",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "json"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucketProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Properties for defining a `AWS::S3::Bucket`",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucketProps",
      "kind": "interface",
      "name": "CfnBucketProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.AccelerateConfiguration`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-accelerateconfiguration"
          },
          "immutable": true,
          "name": "accelerateConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.AccessControl`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-accesscontrol"
          },
          "immutable": true,
          "name": "accessControl",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.AnalyticsConfigurations`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-analyticsconfigurations"
          },
          "immutable": true,
          "name": "analyticsConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.BucketEncryption`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-bucketencryption"
          },
          "immutable": true,
          "name": "bucketEncryption",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.BucketName`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-name"
          },
          "immutable": true,
          "name": "bucketName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.CorsConfiguration`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-crossoriginconfig"
          },
          "immutable": true,
          "name": "corsConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.InventoryConfigurations`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-inventoryconfigurations"
          },
          "immutable": true,
          "name": "inventoryConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.LifecycleConfiguration`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-lifecycleconfig"
          },
          "immutable": true,
          "name": "lifecycleConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.LoggingConfiguration`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-loggingconfig"
          },
          "immutable": true,
          "name": "loggingConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.MetricsConfigurations`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-metricsconfigurations"
          },
          "immutable": true,
          "name": "metricsConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.NotificationConfiguration`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-notification"
          },
          "immutable": true,
          "name": "notificationConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.PublicAccessBlockConfiguration`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-publicaccessblockconfiguration"
          },
          "immutable": true,
          "name": "publicAccessBlockConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.ReplicationConfiguration`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-replicationconfiguration"
          },
          "immutable": true,
          "name": "replicationConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.Tags`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-tags"
          },
          "immutable": true,
          "name": "tags",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.VersioningConfiguration`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-versioning"
          },
          "immutable": true,
          "name": "versioningConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::S3::Bucket.WebsiteConfiguration`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-websiteconfiguration"
          },
          "immutable": true,
          "name": "websiteConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.EventType": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "comment": "Notification event types."
      },
      "fqn": "@aws-cdk/aws-s3.EventType",
      "kind": "enum",
      "members": [
        {
          "docs": {
            "comment": "Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject."
          },
          "name": "ObjectCreated"
        },
        {
          "docs": {
            "comment": "Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject."
          },
          "name": "ObjectCreatedPut"
        },
        {
          "docs": {
            "comment": "Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject."
          },
          "name": "ObjectCreatedPost"
        },
        {
          "docs": {
            "comment": "Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject."
          },
          "name": "ObjectCreatedCopy"
        },
        {
          "docs": {
            "comment": "Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject."
          },
          "name": "ObjectCreatedCompleteMultipartUpload"
        },
        {
          "docs": {
            "comment": "By using the ObjectRemoved event types, you can enable notification when\nan object or a batch of objects is removed from a bucket.\n\nYou can request notification when an object is deleted or a versioned\nobject is permanently deleted by using the s3:ObjectRemoved:Delete event\ntype. Or you can request notification when a delete marker is created for\na versioned object by using s3:ObjectRemoved:DeleteMarkerCreated. For\ninformation about deleting versioned objects, see Deleting Object\nVersions. You can also use a wildcard s3:ObjectRemoved:* to request\nnotification anytime an object is deleted.\n\nYou will not receive event notifications from automatic deletes from\nlifecycle policies or from failed operations."
          },
          "name": "ObjectRemoved"
        },
        {
          "docs": {
            "comment": "By using the ObjectRemoved event types, you can enable notification when\nan object or a batch of objects is removed from a bucket.\n\nYou can request notification when an object is deleted or a versioned\nobject is permanently deleted by using the s3:ObjectRemoved:Delete event\ntype. Or you can request notification when a delete marker is created for\na versioned object by using s3:ObjectRemoved:DeleteMarkerCreated. For\ninformation about deleting versioned objects, see Deleting Object\nVersions. You can also use a wildcard s3:ObjectRemoved:* to request\nnotification anytime an object is deleted.\n\nYou will not receive event notifications from automatic deletes from\nlifecycle policies or from failed operations."
          },
          "name": "ObjectRemovedDelete"
        },
        {
          "docs": {
            "comment": "By using the ObjectRemoved event types, you can enable notification when\nan object or a batch of objects is removed from a bucket.\n\nYou can request notification when an object is deleted or a versioned\nobject is permanently deleted by using the s3:ObjectRemoved:Delete event\ntype. Or you can request notification when a delete marker is created for\na versioned object by using s3:ObjectRemoved:DeleteMarkerCreated. For\ninformation about deleting versioned objects, see Deleting Object\nVersions. You can also use a wildcard s3:ObjectRemoved:* to request\nnotification anytime an object is deleted.\n\nYou will not receive event notifications from automatic deletes from\nlifecycle policies or from failed operations."
          },
          "name": "ObjectRemovedDeleteMarkerCreated"
        },
        {
          "docs": {
            "comment": "You can use this event type to request Amazon S3 to send a notification\nmessage when Amazon S3 detects that an object of the RRS storage class is\nlost."
          },
          "name": "ReducedRedundancyLostObject"
        }
      ],
      "name": "EventType"
    },
    "@aws-cdk/aws-s3.IBucket": {
      "assembly": "@aws-cdk/aws-s3",
      "fqn": "@aws-cdk/aws-s3.IBucket",
      "interfaces": [
        {
          "fqn": "@aws-cdk/cdk.IConstruct"
        }
      ],
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "comment": "Adds a statement to the resource policy for a principal (i.e.\naccount/role/service) to perform actions on this bucket and/or it's\ncontents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for\nthis bucket or objects."
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Returns an ARN that represents all objects within the bucket that match\nthe key pattern specified. To represent all keys, specify ``\"*\"``.\n\nIf you specify multiple components for keyPattern, they will be concatenated::\n\n   arnForObjects('home/', team, '/', user, '/*')"
          },
          "name": "arnForObjects",
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "primitive": "string"
          },
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-s3.BucketImportProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grants s3:DeleteObject* permission to an IAM pricipal for objects\nin this bucket."
          },
          "name": "grantDelete",
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Allows unrestricted access to objects from this bucket.\n\nIMPORTANT: This permission allows anyone to perform actions on S3 objects\nin this bucket, which is useful for when you configure your bucket as a\nwebsite and want everyone to be able to read objects in the bucket without\nneeding to authenticate.\n\nWithout arguments, this method will grant read (\"s3:GetObject\") access to\nall objects (\"*\") in the bucket.\n\nThe method returns the `iam.PolicyStatement` object, which can then be modified\nas needed. For example, you can add a condition that will restrict access only\nto an IPv4 range like this:\n\n     const statement = bucket.grantPublicAccess();\n     statement.addCondition('IpAddress', { \"aws:SourceIp\": \"54.240.143.0/24\" });",
            "return": "The `iam.PolicyStatement` object, which can be used to apply e.g. conditions."
          },
          "name": "grantPublicAccess",
          "parameters": [
            {
              "docs": {
                "comment": "the prefix of S3 object keys (e.g. `home/*`). Default is \"*\"."
              },
              "name": "keyPrefix",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the set of S3 actions to allow. Default is \"s3:GetObject\"."
              },
              "name": "allowedActions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          },
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal.\n\nIf encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal."
          },
          "name": "grantPut",
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grant read permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf encryption is used, permission to use the key to decrypt the contents\nof the bucket will also be granted to the same principal."
          },
          "name": "grantRead",
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grants read/write permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite",
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grant write permissions to this bucket to an IAM principal.\n\nIf encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal."
          },
          "name": "grantWrite",
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Defines a CloudWatch Event Rule that triggers upon putting an object into the Bucket.",
            "return": "a new {@link events.EventRule} instance"
          },
          "name": "onPutObject",
          "parameters": [
            {
              "docs": {
                "comment": "the logical ID of the newly created Event Rule"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the optional target of the Event Rule"
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-events.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "the optional path inside the Bucket that will be watched for changes"
              },
              "name": "path",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-events.EventRule"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The https URL of an S3 object. For example:",
            "example": "https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey",
            "return": "an ObjectS3Url token"
          },
          "name": "urlForObject",
          "parameters": [
            {
              "docs": {
                "comment": "The S3 key of the object. If not specified, the URL of the\nbucket is returned."
              },
              "name": "key",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "name": "IBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "immutable": true,
          "name": "bucketArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the bucket."
          },
          "immutable": true,
          "name": "bucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The https:// URL of this bucket.",
            "example": "https://s3.us-west-1.amazonaws.com/onlybucket\nSimilar to calling `urlForObject` with no object key."
          },
          "immutable": true,
          "name": "bucketUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The domain of the bucket."
          },
          "immutable": true,
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "immutable": true,
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.LifecycleRule": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Declaration of a Life cycle rule"
      },
      "fqn": "@aws-cdk/aws-s3.LifecycleRule",
      "kind": "interface",
      "name": "LifecycleRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "Specifies a lifecycle rule that aborts incomplete multipart uploads to an Amazon S3 bucket.\n\nThe AbortIncompleteMultipartUpload property type creates a lifecycle\nrule that aborts incomplete multipart uploads to an Amazon S3 bucket.\nWhen Amazon S3 aborts a multipart upload, it deletes all parts\nassociated with the multipart upload.",
            "default": "Incomplete uploads are never aborted"
          },
          "immutable": true,
          "name": "abortIncompleteMultipartUploadAfterDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether this rule is enabled.",
            "default": "true"
          },
          "immutable": true,
          "name": "enabled",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates when objects are deleted from Amazon S3 and Amazon Glacier.\n\nThe date value must be in ISO 8601 format. The time is always midnight UTC.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "default": "No expiration date"
          },
          "immutable": true,
          "name": "expirationDate",
          "type": {
            "optional": true,
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon Glacier.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "default": "No expiration timeout"
          },
          "immutable": true,
          "name": "expirationInDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "A unique identifier for this rule. The value cannot be more than 255 characters."
          },
          "immutable": true,
          "name": "id",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Time between when a new version of the object is uploaded to the bucket and when old versions of the object expire.\n\nFor buckets with versioning enabled (or suspended), specifies the time,\nin days, between when a new version of the object is uploaded to the\nbucket and when old versions of the object expire. When object versions\nexpire, Amazon S3 permanently deletes them. If you specify a transition\nand expiration time, the expiration time must be later than the\ntransition time.",
            "default": "No noncurrent version expiration"
          },
          "immutable": true,
          "name": "noncurrentVersionExpirationInDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "One or more transition rules that specify when non-current objects transition to a specified storage class.\n\nOnly for for buckets with versioning enabled (or suspended).\n\nIf you specify a transition and expiration time, the expiration time\nmust be later than the transition time."
          },
          "immutable": true,
          "name": "noncurrentVersionTransitions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.NoncurrentVersionTransition"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Object key prefix that identifies one or more objects to which this rule applies.",
            "default": "Rule applies to all objects"
          },
          "immutable": true,
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The TagFilter property type specifies tags to use to identify a subset of objects for an Amazon S3 bucket.",
            "default": "Rule applies to all objects"
          },
          "immutable": true,
          "name": "tagFilters",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "One or more transition rules that specify when an object transitions to a specified storage class.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "default": "No transition rules"
          },
          "immutable": true,
          "name": "transitions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.Transition"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.NoncurrentVersionTransition": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Describes when noncurrent versions transition to a specified storage class."
      },
      "fqn": "@aws-cdk/aws-s3.NoncurrentVersionTransition",
      "kind": "interface",
      "name": "NoncurrentVersionTransition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The storage class to which you want the object to transition."
          },
          "immutable": true,
          "name": "storageClass",
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates the number of days after creation when objects are transitioned to the specified storage class.",
            "default": "No transition count."
          },
          "immutable": true,
          "name": "transitionInDays",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.NotificationKeyFilter": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter",
      "kind": "interface",
      "name": "NotificationKeyFilter",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "S3 keys must have the specified prefix."
          },
          "immutable": true,
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "S3 keys must have the specified suffix."
          },
          "immutable": true,
          "name": "suffix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.StorageClass": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "comment": "Storage class to move an object to"
      },
      "fqn": "@aws-cdk/aws-s3.StorageClass",
      "kind": "enum",
      "members": [
        {
          "docs": {
            "comment": "Storage class for data that is accessed less frequently, but requires rapid access when needed.\n\nHas lower availability than Standard storage."
          },
          "name": "InfrequentAccess"
        },
        {
          "docs": {
            "comment": "Infrequent Access that's only stored in one availability zone.\n\nHas lower availability than standard InfrequentAccess."
          },
          "name": "OneZoneInfrequentAccess"
        },
        {
          "docs": {
            "comment": "Storage class for long-term archival that can take between minutes and hours to access."
          },
          "name": "Glacier"
        }
      ],
      "name": "StorageClass"
    },
    "@aws-cdk/aws-s3.Transition": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Describes when an object transitions to a specified storage class."
      },
      "fqn": "@aws-cdk/aws-s3.Transition",
      "kind": "interface",
      "name": "Transition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The storage class to which you want the object to transition."
          },
          "immutable": true,
          "name": "storageClass",
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates when objects are transitioned to the specified storage class.\n\nThe date value must be in ISO 8601 format. The time is always midnight UTC.",
            "default": "No transition date."
          },
          "immutable": true,
          "name": "transitionDate",
          "type": {
            "optional": true,
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates the number of days after creation when objects are transitioned to the specified storage class.",
            "default": "No transition count."
          },
          "immutable": true,
          "name": "transitionInDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        }
      ]
    }
  },
  "version": "0.28.0",
  "fingerprint": "fEnHzSg90YVOOtYrycnEgvTwD3HeYl8J9VlUKduckZQ="
}
