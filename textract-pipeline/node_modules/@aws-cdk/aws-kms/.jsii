{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-iam": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                },
                "python": {
                  "distName": "aws-cdk.cx-api",
                  "module": "aws_cdk.cx_api"
                }
              },
              "version": "0.28.0"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            },
            "python": {
              "distName": "aws-cdk.cdk",
              "module": "aws_cdk.cdk"
            }
          },
          "version": "0.28.0"
        },
        "@aws-cdk/region-info": {
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.RegionInfo",
              "packageId": "Amazon.CDK.RegionInfo",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk-region-info",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.regioninfo"
            },
            "js": {
              "npm": "@aws-cdk/region-info"
            },
            "python": {
              "distName": "aws-cdk.region-info",
              "module": "aws_cdk.region_info"
            }
          },
          "version": "0.28.0"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "0.28.0"
    },
    "@aws-cdk/cdk": {
      "dependencies": {
        "@aws-cdk/cx-api": {
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.CXAPI",
              "packageId": "Amazon.CDK.CXAPI",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk-cx-api",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            },
            "python": {
              "distName": "aws-cdk.cx-api",
              "module": "aws_cdk.cx_api"
            }
          },
          "version": "0.28.0"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        },
        "python": {
          "distName": "aws-cdk.cdk",
          "module": "aws_cdk.cdk"
        }
      },
      "version": "0.28.0"
    }
  },
  "description": "CDK Constructs for AWS KMS",
  "homepage": "https://github.com/awslabs/aws-cdk",
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-kms",
  "readme": {
    "markdown": "## AWS KMS Construct Library\n\nDefines a KMS key:\n\n```js\nnew EncryptionKey(this, 'MyKey', {\n    enableKeyRotation: true\n});\n```\n\nAdd a couple of aliases:\n\n```js\nconst key = new EncryptionKey(this, 'MyKey');\nkey.addAlias('alias/foo');\nkey.addAlias('alias/bar');\n```\n\n### Sharing keys between stacks\n\nTo use a KMS key in a different stack in the same CDK application,\npass the construct to the other stack:\n\n```ts\n\n/**\n * Stack that defines the key\n */\nclass KeyStack extends cdk.Stack {\n  public readonly key: kms.EncryptionKey;\n\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n    this.key = new kms.EncryptionKey(this, 'MyKey', { retain: false });\n  }\n}\n\ninterface UseStackProps extends cdk.StackProps {\n  key: kms.IEncryptionKey; // Use IEncryptionKey here\n}\n\n/**\n * Stack that uses the key\n */\nclass UseStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props: UseStackProps) {\n    super(scope, id, props);\n\n    // Use the IEncryptionKey object here.\n    props.key.addAlias('alias/foo');\n  }\n}\n\nconst keyStack = new KeyStack(app, 'KeyStack');\nnew UseStack(app, 'UseStack', { key: keyStack.key });\n```\n\n\n### Importing existing keys\n\nTo use a KMS key that is not defined in this CDK app, but is created through other means, use\n`EncryptionKey.import(parent, name, ref)`:\n\n```ts\nconst myKeyImported = EncryptionKey.import(this, 'MyImportedKey', {\n    keyArn: 'arn:aws:...'\n});\n\n// you can do stuff with this imported key.\nkey.addAlias('alias/foo');\n```\n\nNote that a call to `.addToPolicy(statement)` on `myKeyImported` will not have\nan affect on the key's policy because it is not owned by your stack. The call\nwill be a no-op.\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/awslabs/aws-cdk.git"
  },
  "schema": "jsii/1.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "namespace": "Amazon.CDK.AWS.KMS",
      "packageId": "Amazon.CDK.AWS.KMS",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "kms",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.kms"
    },
    "js": {
      "npm": "@aws-cdk/aws-kms"
    },
    "python": {
      "distName": "aws-cdk.aws-kms",
      "module": "aws_cdk.aws_kms"
    }
  },
  "types": {
    "@aws-cdk/aws-kms.CfnAlias": {
      "assembly": "@aws-cdk/aws-kms",
      "base": {
        "fqn": "@aws-cdk/cdk.CfnResource"
      },
      "docs": {
        "cloudformationResource": "AWS::KMS::Alias",
        "comment": "A CloudFormation `AWS::KMS::Alias`",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html"
      },
      "fqn": "@aws-cdk/aws-kms.CfnAlias",
      "initializer": {
        "docs": {
          "comment": "Create a new `AWS::KMS::Alias`."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "- scope in which this resource is defined"
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "- scoped id of the resource"
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "- resource properties"
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-kms.CfnAliasProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "overrides": {
            "fqn": "@aws-cdk/cdk.CfnResource"
          },
          "parameters": [
            {
              "name": "properties",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "CfnAlias",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "aliasName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "propertyOverrides",
          "type": {
            "fqn": "@aws-cdk/aws-kms.CfnAliasProps"
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.CfnAliasProps": {
      "assembly": "@aws-cdk/aws-kms",
      "datatype": true,
      "docs": {
        "comment": "Properties for defining a `AWS::KMS::Alias`",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html"
      },
      "fqn": "@aws-cdk/aws-kms.CfnAliasProps",
      "kind": "interface",
      "name": "CfnAliasProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::KMS::Alias.AliasName`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html#cfn-kms-alias-aliasname"
          },
          "immutable": true,
          "name": "aliasName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::KMS::Alias.TargetKeyId`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html#cfn-kms-alias-targetkeyid"
          },
          "immutable": true,
          "name": "targetKeyId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.CfnKey": {
      "assembly": "@aws-cdk/aws-kms",
      "base": {
        "fqn": "@aws-cdk/cdk.CfnResource"
      },
      "docs": {
        "cloudformationResource": "AWS::KMS::Key",
        "comment": "A CloudFormation `AWS::KMS::Key`",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html"
      },
      "fqn": "@aws-cdk/aws-kms.CfnKey",
      "initializer": {
        "docs": {
          "comment": "Create a new `AWS::KMS::Key`."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "- scope in which this resource is defined"
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "- scoped id of the resource"
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "- resource properties"
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-kms.CfnKeyProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "overrides": {
            "fqn": "@aws-cdk/cdk.CfnResource"
          },
          "parameters": [
            {
              "name": "properties",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "CfnKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformationAttribute": "Arn"
          },
          "immutable": true,
          "name": "keyArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "keyId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "propertyOverrides",
          "type": {
            "fqn": "@aws-cdk/aws-kms.CfnKeyProps"
          }
        },
        {
          "docs": {
            "comment": "The `TagManager` handles setting, removing and formatting tags\n\nTags should be managed either passing them as properties during\ninitiation or by calling methods on this object. If both techniques are\nused only the tags from the TagManager will be used. `Tag` (aspect)\nwill use the manager."
          },
          "immutable": true,
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.CfnKeyProps": {
      "assembly": "@aws-cdk/aws-kms",
      "datatype": true,
      "docs": {
        "comment": "Properties for defining a `AWS::KMS::Key`",
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html"
      },
      "fqn": "@aws-cdk/aws-kms.CfnKeyProps",
      "kind": "interface",
      "name": "CfnKeyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::KMS::Key.KeyPolicy`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-keypolicy"
          },
          "immutable": true,
          "name": "keyPolicy",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "json"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::KMS::Key.Description`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-description"
          },
          "immutable": true,
          "name": "description",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::KMS::Key.Enabled`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enabled"
          },
          "immutable": true,
          "name": "enabled",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::KMS::Key.EnableKeyRotation`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation"
          },
          "immutable": true,
          "name": "enableKeyRotation",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::KMS::Key.KeyUsage`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-keyusage"
          },
          "immutable": true,
          "name": "keyUsage",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::KMS::Key.PendingWindowInDays`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-pendingwindowindays"
          },
          "immutable": true,
          "name": "pendingWindowInDays",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "`AWS::KMS::Key.Tags`",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-tags"
          },
          "immutable": true,
          "name": "tags",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.CfnTag"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.EncryptionKey": {
      "assembly": "@aws-cdk/aws-kms",
      "base": {
        "fqn": "@aws-cdk/aws-kms.EncryptionKeyBase"
      },
      "docs": {
        "comment": "Defines a KMS key."
      },
      "fqn": "@aws-cdk/aws-kms.EncryptionKey",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-kms.EncryptionKeyProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Defines an imported encryption key.\n\n`ref` can be obtained either via a call to `key.export()` or using\nliterals.\n\nFor example:\n\n   const keyAttr = key.export();\n   const keyRef1 = EncryptionKey.import(this, 'MyImportedKey1', keyAttr);\n   const keyRef2 = EncryptionKey.import(this, 'MyImportedKey2', {\n     keyArn: new KeyArn('arn:aws:kms:...')\n   });"
          },
          "name": "import",
          "parameters": [
            {
              "docs": {
                "comment": "The parent construct."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "The name of the construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The key reference."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-kms.EncryptionKeyImportProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Exports this key from the current stack.",
            "return": "a key ref which can be used in a call to `EncryptionKey.import(ref)`."
          },
          "name": "export",
          "overrides": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyBase"
          },
          "returns": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyImportProps"
          }
        }
      ],
      "name": "EncryptionKey",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the key."
          },
          "immutable": true,
          "name": "keyArn",
          "overrides": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyBase"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Optional policy document that represents the resource policy of this key.\n\nIf specified, addToResourcePolicy can be used to edit this policy.\nOtherwise this method will no-op."
          },
          "immutable": true,
          "name": "policy",
          "overrides": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyBase"
          },
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.EncryptionKeyAlias": {
      "assembly": "@aws-cdk/aws-kms",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Defines a display name for a customer master key (CMK) in AWS Key Management\nService (AWS KMS). Using an alias to refer to a key can help you simplify key\nmanagement. For example, when rotating keys, you can just update the alias\nmapping instead of tracking and changing key IDs. For more information, see\nWorking with Aliases in the AWS Key Management Service Developer Guide.\n\nYou can also add an alias for a key by calling `key.addAlias(alias)`."
      },
      "fqn": "@aws-cdk/aws-kms.EncryptionKeyAlias",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-kms.EncryptionKeyAliasProps"
            }
          }
        ]
      },
      "kind": "class",
      "name": "EncryptionKeyAlias",
      "properties": [
        {
          "docs": {
            "comment": "The name of the alias."
          },
          "name": "aliasName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.EncryptionKeyAliasProps": {
      "assembly": "@aws-cdk/aws-kms",
      "datatype": true,
      "fqn": "@aws-cdk/aws-kms.EncryptionKeyAliasProps",
      "kind": "interface",
      "name": "EncryptionKeyAliasProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the alias. The name must start with alias followed by a\nforward slash, such as alias/. You can't specify aliases that begin with\nalias/AWS. These aliases are reserved."
          },
          "immutable": true,
          "name": "alias",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The ID of the key for which you are creating the alias. Specify the key's\nglobally unique identifier or Amazon Resource Name (ARN). You can't\nspecify another alias."
          },
          "immutable": true,
          "name": "key",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey"
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.EncryptionKeyBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-kms",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "fqn": "@aws-cdk/aws-kms.EncryptionKeyBase",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The scope in which to define this construct"
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "The scoped construct ID. Must be unique amongst siblings. If\nthe ID includes a path separator (`/`), then it will be replaced by double\ndash `--`."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-kms.IEncryptionKey"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Defines a new alias for the key."
          },
          "name": "addAlias",
          "overrides": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey"
          },
          "parameters": [
            {
              "name": "alias",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyAlias"
          }
        },
        {
          "docs": {
            "comment": "Adds a statement to the KMS key resource policy."
          },
          "name": "addToResourcePolicy",
          "overrides": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The policy statement to add"
              },
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            },
            {
              "docs": {
                "comment": "If this is set to `false` and there is no policy\ndefined (i.e. external key), the operation will fail. Otherwise, it will\nno-op."
              },
              "name": "allowNoOp",
              "type": {
                "optional": true,
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Exports this key from the current stack."
          },
          "name": "export",
          "overrides": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey"
          },
          "returns": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyImportProps"
          }
        },
        {
          "docs": {
            "comment": "Grant the indicated permissions on this key to the given principal\n\nThis modifies both the principal's policy as well as the resource policy,\nsince the default CloudFormation setup for KMS keys is that the policy\nmust not be empty and so default grants won't work."
          },
          "name": "grant",
          "overrides": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey"
          },
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          },
          "variadic": true
        },
        {
          "docs": {
            "comment": "Grant decryption permisisons using this key to the given principal"
          },
          "name": "grantDecrypt",
          "overrides": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey"
          },
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "docs": {
            "comment": "Grant encryption permisisons using this key to the given principal"
          },
          "name": "grantEncrypt",
          "overrides": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey"
          },
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "docs": {
            "comment": "Grant encryption and decryption permisisons using this key to the given principal"
          },
          "name": "grantEncryptDecrypt",
          "overrides": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey"
          },
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        }
      ],
      "name": "EncryptionKeyBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the key."
          },
          "immutable": true,
          "name": "keyArn",
          "overrides": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Optional policy document that represents the resource policy of this key.\n\nIf specified, addToResourcePolicy can be used to edit this policy.\nOtherwise this method will no-op."
          },
          "immutable": true,
          "name": "policy",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.EncryptionKeyImportProps": {
      "assembly": "@aws-cdk/aws-kms",
      "datatype": true,
      "fqn": "@aws-cdk/aws-kms.EncryptionKeyImportProps",
      "kind": "interface",
      "name": "EncryptionKeyImportProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the external KMS key."
          },
          "immutable": true,
          "name": "keyArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.EncryptionKeyProps": {
      "assembly": "@aws-cdk/aws-kms",
      "datatype": true,
      "docs": {
        "comment": "Construction properties for a KMS Key object"
      },
      "fqn": "@aws-cdk/aws-kms.EncryptionKeyProps",
      "kind": "interface",
      "name": "EncryptionKeyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "A description of the key. Use a description that helps your users decide\nwhether the key is appropriate for a particular task."
          },
          "immutable": true,
          "name": "description",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates whether the key is available for use.",
            "default": "Key is enabled"
          },
          "immutable": true,
          "name": "enabled",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates whether AWS KMS rotates the key.",
            "default": "false"
          },
          "immutable": true,
          "name": "enableKeyRotation",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Custom policy document to attach to the KMS key.",
            "default": "A policy document with permissions for the account root to\nadminister the key will be created."
          },
          "immutable": true,
          "name": "policy",
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether the encryption key should be retained when it is removed from the Stack. This is useful when one wants to\nretain access to data that was encrypted with a key that is being retired.",
            "default": "true"
          },
          "immutable": true,
          "name": "retain",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.IEncryptionKey": {
      "assembly": "@aws-cdk/aws-kms",
      "fqn": "@aws-cdk/aws-kms.IEncryptionKey",
      "interfaces": [
        {
          "fqn": "@aws-cdk/cdk.IConstruct"
        }
      ],
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "comment": "Defines a new alias for the key."
          },
          "name": "addAlias",
          "parameters": [
            {
              "name": "alias",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyAlias"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Adds a statement to the KMS key resource policy."
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The policy statement to add"
              },
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            },
            {
              "docs": {
                "comment": "If this is set to `false` and there is no policy\ndefined (i.e. external key), the operation will fail. Otherwise, it will\nno-op."
              },
              "name": "allowNoOp",
              "type": {
                "optional": true,
                "primitive": "boolean"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Exports this key from the current stack.",
            "return": "a key ref which can be used in a call to `EncryptionKey.import(ref)`."
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyImportProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grant the indicated permissions on this key to the given principal"
          },
          "name": "grant",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          },
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grant decryption permisisons using this key to the given principal"
          },
          "name": "grantDecrypt",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grant encryption permisisons using this key to the given principal"
          },
          "name": "grantEncrypt",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grant encryption and decryption permisisons using this key to the given principal"
          },
          "name": "grantEncryptDecrypt",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.Grant"
          }
        }
      ],
      "name": "IEncryptionKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the key."
          },
          "immutable": true,
          "name": "keyArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.ViaServicePrincipal": {
      "assembly": "@aws-cdk/aws-kms",
      "base": {
        "fqn": "@aws-cdk/aws-iam.PrincipalBase"
      },
      "docs": {
        "comment": "A principal to allow access to a key if it's being used through another AWS service"
      },
      "fqn": "@aws-cdk/aws-kms.ViaServicePrincipal",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "serviceName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "basePrincipal",
            "type": {
              "fqn": "@aws-cdk/aws-iam.IPrincipal",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "name": "ViaServicePrincipal",
      "properties": [
        {
          "docs": {
            "comment": "Return the policy fragment that identifies this principal in a Policy."
          },
          "immutable": true,
          "name": "policyFragment",
          "overrides": {
            "fqn": "@aws-cdk/aws-iam.PrincipalBase"
          },
          "type": {
            "fqn": "@aws-cdk/aws-iam.PrincipalPolicyFragment"
          }
        },
        {
          "immutable": true,
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    }
  },
  "version": "0.28.0",
  "fingerprint": "dJceq6AGVnn9Bakgl3pMx1MYiQNMo5M1UaFALb6URh4="
}
