import cxapi = require('@aws-cdk/cx-api');
import { Root } from './construct';
import { ISynthesisSession } from './synthesis';
/**
 * Custom construction properties for a CDK program
 */
export interface AppProps {
    /**
     * Automatically call run before the application exits
     *
     * If you set this, you don't have to call `run()` anymore.
     *
     * @default true if running via CDK toolkit (CDK_OUTDIR is set), false otherwise
     */
    readonly autoRun?: boolean;
    /**
     * Additional context values for the application
     *
     * @default No additional context
     */
    readonly context?: {
        [key: string]: string;
    };
}
/**
 * Represents a CDK program.
 */
export declare class App extends Root {
    private _session?;
    private readonly legacyManifest;
    private readonly runtimeInformation;
    /**
     * Initializes a CDK application.
     * @param request Optional toolkit request (e.g. for tests)
     */
    constructor(props?: AppProps);
    /**
     * Runs the program. Output is written to output directory as specified in the request.
     */
    run(): ISynthesisSession;
    /**
     * Synthesize and validate a single stack.
     * @param stackName The name of the stack to synthesize
     * @deprecated This method is going to be deprecated in a future version of the CDK
     */
    synthesizeStack(stackName: string): cxapi.SynthesizedStack;
    /**
     * Synthesizes multiple stacks
     * @deprecated This method is going to be deprecated in a future version of the CDK
     */
    synthesizeStacks(stackNames: string[]): cxapi.SynthesizedStack[];
    private loadContext;
}
