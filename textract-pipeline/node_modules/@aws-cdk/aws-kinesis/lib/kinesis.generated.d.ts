import cdk = require('@aws-cdk/cdk');
/**
 * Properties for defining a `AWS::Kinesis::Stream`
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html
 */
export interface CfnStreamProps {
    /**
     * `AWS::Kinesis::Stream.ShardCount`
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-shardcount
     */
    readonly shardCount: number | cdk.Token;
    /**
     * `AWS::Kinesis::Stream.Name`
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-name
     */
    readonly name?: string;
    /**
     * `AWS::Kinesis::Stream.RetentionPeriodHours`
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-retentionperiodhours
     */
    readonly retentionPeriodHours?: number | cdk.Token;
    /**
     * `AWS::Kinesis::Stream.StreamEncryption`
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-streamencryption
     */
    readonly streamEncryption?: CfnStream.StreamEncryptionProperty | cdk.Token;
    /**
     * `AWS::Kinesis::Stream.Tags`
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-tags
     */
    readonly tags?: cdk.CfnTag[];
}
/**
 * A CloudFormation `AWS::Kinesis::Stream`
 *
 * @cloudformationResource AWS::Kinesis::Stream
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html
 */
export declare class CfnStream extends cdk.CfnResource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::Kinesis::Stream";
    /**
     * @cloudformationAttribute Arn
     */
    readonly streamArn: string;
    readonly streamId: string;
    /**
     * The `TagManager` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. `Tag` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Create a new `AWS::Kinesis::Stream`.
     *
     * @param scope - scope in which this resource is defined
     * @param id    - scoped id of the resource
     * @param props - resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnStreamProps);
    readonly propertyOverrides: CfnStreamProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnStream {
    /**
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html
     */
    interface StreamEncryptionProperty {
        /**
         * `CfnStream.StreamEncryptionProperty.EncryptionType`
         * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-encryptiontype
         */
        readonly encryptionType: string;
        /**
         * `CfnStream.StreamEncryptionProperty.KeyId`
         * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-keyid
         */
        readonly keyId: string;
    }
}
/**
 * Properties for defining a `AWS::Kinesis::StreamConsumer`
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html
 */
export interface CfnStreamConsumerProps {
    /**
     * `AWS::Kinesis::StreamConsumer.ConsumerName`
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-consumername
     */
    readonly consumerName: string;
    /**
     * `AWS::Kinesis::StreamConsumer.StreamARN`
     * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-streamarn
     */
    readonly streamArn: string;
}
/**
 * A CloudFormation `AWS::Kinesis::StreamConsumer`
 *
 * @cloudformationResource AWS::Kinesis::StreamConsumer
 * @see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html
 */
export declare class CfnStreamConsumer extends cdk.CfnResource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::Kinesis::StreamConsumer";
    /**
     * @cloudformationAttribute ConsumerARN
     */
    readonly streamConsumerConsumerArn: string;
    /**
     * @cloudformationAttribute ConsumerCreationTimestamp
     */
    readonly streamConsumerConsumerCreationTimestamp: string;
    /**
     * @cloudformationAttribute ConsumerName
     */
    readonly streamConsumerConsumerName: string;
    /**
     * @cloudformationAttribute ConsumerStatus
     */
    readonly streamConsumerConsumerStatus: string;
    /**
     * @cloudformationAttribute StreamARN
     */
    readonly streamConsumerStreamArn: string;
    readonly streamConsumerArn: string;
    /**
     * Create a new `AWS::Kinesis::StreamConsumer`.
     *
     * @param scope - scope in which this resource is defined
     * @param id    - scoped id of the resource
     * @param props - resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnStreamConsumerProps);
    readonly propertyOverrides: CfnStreamConsumerProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
